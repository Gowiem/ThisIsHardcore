/*
 * File: app/model/Event.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.model.Event', {
    extend: 'Ext.data.Model',
    config: {
        fields: [
            {
                name: 'artist_name'
            },
            {
                name: 'description'
            },
            {
                name: 'artist_website'
            },
            {
                name: 'start_time'
            },
            {
                convert: function(v, rec) {
                    var unixTime = parseInt(rec.get("start_time"));
                    var date = new Date( (unixTime * 1000) + (4 * 60 * 60 * 1000));

                    var hours = date.getHours();
                    var minutes = date.getMinutes();

                    var suffix = "AM";
                    if (hours >= 12) {
                        suffix = "PM";
                        hours = hours - 12;
                    }
                    if (hours == 0) {
                        hours = 12;
                    }

                    if (minutes < 10)
                    minutes = "0" + minutes;

                    return hours + ":" + minutes + " " + suffix;
                },
                name: 'start_time_display'
            },
            {
                convert: function(v, rec) {
                    var unixTime = parseInt(rec.get("start_time"));
                    var date = new Date( (unixTime * 1000) + (4 * 60 * 60 * 1000));
                    return date;
                },
                name: 'start_datetime'
            },
            {
                convert: function(v, rec) {
                    var unixTime = parseInt(rec.get("end_time"));
                    var date = new Date( (unixTime * 1000) + (4 * 60 * 60 * 1000));
                    return date;
                },
                name: 'end_datetime'
            },
            {
                convert: function(v, rec) {
                    var unixTime = parseInt(rec.get("start_time"));
                    var date = new Date( (unixTime * 1000) + (4 * 60 * 60 * 1000));
                    return date.getMonth() + '/' + date.getDate();
                },
                name: 'start_date_display'
            },
            {
                convert: function(v, rec) {
                    var unixTime = parseInt(rec.get("end_time"));
                    var date = new Date( (unixTime * 1000) + (4 * 60 * 60 * 1000));

                    var hours = date.getHours();
                    var minutes = date.getMinutes();

                    var suffix = "AM";
                    if (hours >= 12) {
                        suffix = "PM";
                        hours = hours - 12;
                    }
                    if (hours == 0) {
                        hours = 12;
                    }

                    if (minutes < 10)
                    minutes = "0" + minutes;

                    return hours + ":" + minutes + " " + suffix;
                },
                name: 'end_time_display'
            },
            {
                name: 'end_time'
            },
            {
                name: 'venue'
            },
            {
                name: 'image_url'
            },
            {
                name: 'icon_url'
            }
        ]
    }
});